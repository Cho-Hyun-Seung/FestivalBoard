generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String
  phoneNum Int
  sex      String
  writtenPlanner  Planner[]
  writtenReview Review[]
}

model Planner {
  id     Int    @id @default(autoincrement())
  title  String
  date   Int
  detail String
  author  User @relation(fields: [authorId], references: [id])
  authorId   Int
  festivals Festival[] 
  events Event[] 
  touristSpots Touristspot[] 
  weather String[]
}

model Event {
  id           Int       @id @default(autoincrement())
  name         String
  location     String?
  rnAddress    String?
  lnAddress    String?
  stDate       String?
  fnDate       String?
  stTime       String?
  fnTime       String?
  charge       String?
  org          String?
  discountInfo String?
  enterAge     String?
  url          String?
  parking      Boolean?
  detail       String?
  Planners  Planner[]
}

model Festival {
  id           Int     @id @default(autoincrement())
  title             String
  tel               String?
  first_image       String?
  first_image2      String?
  startDate  String?
  endDate    String?
  contentId        String?
  contentTypeId   String?
  addr1             String?
  addr2             String?
  ageLimit         String?
  bookingPlace     String?
  discountInfo     String?
  homepage    String?
  grade    String?
  sponsor1          String?
  sponsor1Tel      String?
  sponsor2          String?
  sponsor2Tel      String?
  subevent          String?
  useTimeFestival String? // 이용요금
  Planners  Planner[]
}

model Region {
  id                 Int     @id @default(autoincrement())
  level1             String
  level2             String?
  level3             String?
  xCoord            String?
  yCoord            String?
  midTermCode      String?
  shortTermCode    String?
  shortTermWeather String?
  midTermWeather   String?
}

model Touristspot {
  id      Int     @id @default(autoincrement())
  name      String
  category      String  // 광광지 구분
  rdnmadr       String? // 도로명 주소
  lnmadr        String? // 지번 주소
  cnvnncFclty   String? // 편의시설 정보
  appnDate      String? // 지정일자
  aceptncCo     String? // 수용가능 인원 수
  parkingPlace     String? // 주차 
  introduce  String? // 설명
  phoneNumber   String?
  institutionNm String? // 관리기관명
  Planners  Planner[]
}

model Review {
  id       Int       @id @default(autoincrement())
  title    String
  date     Int
  grade    Int
  author  User  @relation(fields: [authorId],references: [id])
    authorId  Int
  reviewPhotos Reviewphoto[]
}

model Reviewphoto {
  id  Int     @id @default(autoincrement())
  url String
  reviewId  Int
  review  Review  @relation(fields: [reviewId],references: [id])
}