generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  name     String
  phoneNum String
  sex      String
  planners  Planner[]
  reviews Review[]
}

model Planner {
  id     Int    @id @default(autoincrement())
  title  String
  date   DateTime @default(now())
  content String
  author  User @relation(fields: [authorId], references: [id])
  authorId   Int
  festivals Festival[] 
  touristSpots TouristSpot[] 
  weathers Weather[]
}


// 행사 축제 공연 통합
model Festival {
  id           Int     @id @default(autoincrement())
  title             String
  tel               String?
  firstImage       String?
  firstImage2      String?
  startDate  Int?
  endDate    Int?
  contentId        String
  contentTypeId   String
  addr1             String?
  addr2             String?
  ageLimit         String?
  bookingPlace     String?
  discountInfo     String?
  homepage    String?
  grade    String?
  sponsor1          String?
  sponsor1Tel      String?
  sponsor2          String?
  sponsor2Tel      String?
  subevent          String?
  useTimeFestival String? // 이용요금
  planners  Planner[]
}

model Weather {
  id                 Int     @id @default(autoincrement())
  level1             String
  level2             String?
  level3             String?
  xCoord            String?
  yCoord            String?
  midTermCode      String?
  shortTermCode    String?
  shortTermWeather String?
  midTermWeather   String?
  usePlannerId Int
  usePlanner Planner @relation(fields: [usePlannerId], references: [id])

}

model TouristSpot {
  id      Int     @id @default(autoincrement())
  title      String
  infoCenter String?
  addr1 String
  contentId String
  contentType String @default("12")
  firstImage       String?
  firstImage2      String?
  restDate String?
  useSeason String?
  useTime String?
  zipcode Int?
  homepage String?
  overview String?
  parking String
  planners  Planner[]
}

model Review {
  id       Int       @id @default(autoincrement())
  title    String
  content String?
  date     DateTime  @default(now())
  grade    Int
  author  User  @relation(fields: [authorId],references: [id])
  authorId  Int
  reviewPhotos Reviewphoto[]
}

model Reviewphoto {
  id  Int     @id @default(autoincrement())
  url String
  reviewId  Int
  review  Review  @relation(fields: [reviewId],references: [id])
}